#!/bin/bash
#
# Script for connecting to wifi networks.
#
# Dependencies
# - dhclient -- use DHCP
# - wpa_supplicant -- connect to WPA-encrypted networks
# - wpa_passphrase -- create WPA creds usable by wpa_supplicant
# - gpg -- decrypt personal network creds files
# - iwlist -- network discovery
# - iwconfig -- connect to open/WPS-encrypted networks

set -e

[[ "$UID" -ne 0 ]] && echo "Must be root." && exit 1

IFACE=wlan0
CONF=$HOME/.pass/misc/wifi.conf.gpg
WIFI=/run/user/$(id -u $SUDO_USER)/wifi.conf


usage() {
  echo "Usage: ${0##*/} [options] [command | <essid> [<pass>]]"
  echo
  echo "Commands:"
  echo "  scan          Scan access points in range and output a list."
  echo
  echo "Options:"
  echo "  -c config     Config file with network setup info."
  echo "  -h            Print this message and exit."
  echo
  echo "  essid         ESSID of access point to connect to. If no password is specified, attempt"
  echo "                to connect as if access point is open."
  echo "  passphrase    Passphrase for access point. Must be 8..63 characters."
  echo
  echo "With no arguments, attempts to connect to any available WPA-protected network,"
  echo "using the output of 'gpg --decrypt $CONF' as the WPA credentials."
}

scan() {
  awk -f <(cat << 'EOF'
function output() {
  printf("%s %s %s (%s GHz)\n", encrypted, quality, essid, frequency);
}

BEGIN {
  n = 0;
}

/Cell [0-9]* -/ {
  if (n++) {
    output();
  }
}

/Frequency:/ {
  split($1, temp, ":");
  frequency = temp[2];
}

/Quality=/ {
  split($1, temp, "=");
  split(temp[2], temp, "/");
  quality = temp[1];
}

/Encryption key:/ {
  split($0, temp, ":");
  encrypted = temp[2] == "on" ? "#" : " ";
}

/ESSID:/ {
  split($0, temp, ":");
  essid = temp[2];
}

END {
  if (n) {
    output();
  }
}
EOF
)
}

while getopts c:h opt; do
  case "$opt" in
    c) conf="$OPTARG" ;;
    h) usage && exit ;;
  esac
done
shift $((OPTIND-1))

case "$1" in
  scan)
    ifconfig "$IFACE" up
    iwlist "$IFACE" scan | scan
    ;;
  *)
    killall wpa_supplicant 2>/dev/null || true
    dhclient -r "$IFACE" || true

    if [[ $# -eq 1 ]]; then
      iwconfig "$IFACE" essid "$1"
    else
      trap "shred -zu $WIFI 2>/dev/null" ERR INT
      if [[ -r "$conf" ]]; then
        (umask 0077 && cat "$CONF" >"$WIFI")
      elif [[ $# -eq 2 ]]; then
        (umask 0077 && wpa_passphrase "$1" "$2" >"$WIFI") \
          || (echo "Bad essid or passphrase." && exit 1)
      elif [[ -r "$WIFI" ]]; then
        :
      else
        (umask 0077 && gpg --decrypt "$CONF" >"$WIFI")
      fi
      wpa_supplicant -Dnl80211,wext -i"$IFACE" -c"$WIFI" -B
    fi
    dhclient "$IFACE"
    ;;
esac

